//==================================================================================================
//
//== Descrição =====================================================================================
// Registro de Mudanças
//== Formatação ====================================================================================
// {DATA} - (VERSÃO)
// {DESCRIÇÃO}
//== Manual ========================================================================================
// DATA: Dia em que foi feito a mudança no seguinte formato: {DIA}.{MÊS}.{ANO}
//
// VERSÃO: Número da versão respectiva a mudança feita: {SEASON}.{EPISÓDIO}.{PATCH}.{REVISÃO}
//			- SEASON: número da temporada em que o projeto está (anual).
//			- EPISÓDIO: grande conjunto de mudanças contendo várias novidades (mensal).
//			- PATCH: pequeno conjunto de mudanças completas pré-planejadas (semanal).
//			- REVISÃO: quantidade de modificações feitas no projeto (revisão SVN).
//
// DESCRIÇÃO: Deve conter todas as informações respectivas as mudanças ocorridas na revisão.
//				Acompanhando o seguinte formato: {INDENTAÇÃO}- {MENSAGEM}
//			- INDENTAÇÃO: Deve ser feito através de espaços largos (tabs).
//			- MENSAGEM: Breve parágrafo para explicar as alterações feitas.
//==================================================================================================

12.07.2018 - 0.0.1.9b
- Implementação dos webservices para adicionar, atualizar e remover telefones dos fornecedores.
- Enviando método necessário para gerador em globalFunctions, IncludeThirdParty() - já devia ter sido enviado.
- Atualizado ApiResultProvider para que permita definir uma mensagem adicional ao resultado.
	- Será usado ao remover telefones uma vez que um telefone já pode ter sido removido ou não existir.
- Atualizado ProviderControl para gerenciar os telefones corretamente.
	- Vai considerar se já está definido ou não os telefones e agirá conforme:
		- Se não existir, cria e referencia no fornecedor.
		- Se já existir, atualiza e mantem referencia no fornecedor.
- Adicionado Controle e DAO para telefones em geral.
- Correção de ProviderDAO para funcionar corretamente com foreign keys de 'phones' (commercial e otherphone).
	- Também foi criado novo método newProvider() para centralizar a criação do objeto a partir de dados do banco.
- Algumas correções de nome das variáveis e métodos, Phone e Provider.

12.07.2018 - 0.0.1.9
- Script para gerar massa de dados no sistema.
- Modificado EntityParseException para que seja sempre obrigatório definir a mensagem ao menos

12.07.2018 - 0.0.1.8
- Ajustado parseSingleResult() para permitir retornos em null e array, GenericDAO..
- Iniciando o sistema de webservice para gerenciar fornecedores (adicionar, alterar e obter).
	- Será incluido as entidades dependentes porém ainda não há controle/dao para os mesmos.

12.07.2018 - 0.0.1.7
- Movido algumas configurações de sistema de 'api/index.php' para ApiConnection->init().
	- Agora se definido 'debug' no método GET será possível visualizar detalhes de erros no PHP.
- Configuração de charset para conexão com o banco de dados (padrão: utf8).

10.07.2018 - 0.0.0.6
- Ajustado ApiResponse para considerar valor inicial de time em zero.
- Modificado jsonFatalError() para que possa ser informado time em ApiResponse, ApiConnection.
- Modificado ApiActionInterface para que as actions não recebam um array mas sim ArrayData.
	- Deste modo é possível obter exceptions caso valores não definidos ou inválidos.

10.07.2018 - 0.0.0.5
- Implementação dos webservices para gerenciamento de dados relacionados aos fornecedores:
	- Adicionar novos fornecedores e atualizar dados de fornecedores existentes.
	- Adicionar novos contados, atualizar dados de contatos e remover contatos do fornecedor.
	- Por consequência adicionar novos telefones, alterar dados de telefone e apagar telefones.

10.07.2018 - 0.0.0.4
- Configurações de projeto: não alterar formato de arquivos, remover espaços em brancos ao salvar.
	- Adicionado alguns diretórios para serem ignorados (diretórios de teste 3rdparty).
- Corrigido problema no htaccess que inutilizou os métodos POST e GET.
- Implementação da estrutura do funcionamento dos webservices (API).
- Constantes globais movidas de ApiConnection para ApiResponse.
- Adicionado novas classes para funcionamento em OO de ApiConnection ao invés de vetores.
- Todas as Exceptions criadas dentro do projeto agora serão uma TercomException.
- Renomeado ApiInterface para ApiActionInterface.
- Adicionado exceptions com mensagens e códigos de erro de acesso:
	- Bad request; Method not allowed; Not found; Unauthorized.
- Quando houver algum erro o nome do arquivo de origem será encriptado com Encrypt.
- Adicionado ApiResponse para informar a estrutura (vetor) que era informado nas respostas da API.
- Adicionado ApiResult para especificar um tipo de retorno OO nos métodos ao invés de vetor.
	- Isso nos permite no futuro adicionar outros possíveis métodos para influenciar na resposta.

24.06.2018 - 0.0.0.3
- Adicionado à lista de ignorados alguns diretórios/arquivos desnecessários (binários/gerados).
- Enviando arquivos de base para funcionamento do sistema:
	- Conexão com banco de dados, FriendlyPage, CSS, JS, Bootstrap e outros.

24.06.2018 - 0.0.0.2
- Subindo configurações do projeto para a IDE do Eclipse PHP.

24.06.2018 - 0.0.0.1
- Especificando informações básicas do sistema.
- Definindo formado recomendável para configurar o servidor.